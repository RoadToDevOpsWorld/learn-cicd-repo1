name: Terraform Workflow

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
      account_nbr:
        description: 'Account to dpeloy to'
        type: string

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    
    env:
      TF_VAR_environment: ${{ github.event.inputs.environment }}
    
    defaults:
      run:
        shell: bash
        working-directory: ./src/templates/app-infra/ 
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      
      - name: Terraform Init
        id: init
        run: |
          terraform init \
            -backend-config="bucket=terraform-state-${{ github.event.inputs.account_nbr }}-us-east-1" \
            -backend-config="key=terraform-${{ github.event.inputs.environment }}.tfstate" \
            -backend-config="region=us-east-1" \
            -backend-config="dynamodb_table=terraform-state-lock" \
            -backend-config="encrypt=true"
      - name: Terraform Validate
        id: validate
        run: terraform validate
      
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan \
            -var-file="environments/${{ github.event.inputs.environment }}.tfvars" \
            -out=tfplan
      
      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve tfplan